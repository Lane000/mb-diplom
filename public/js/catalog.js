document.addEventListener('DOMContentLoaded', () => {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
  fetchCars();

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  document.getElementById('applyFilters').addEventListener('click', fetchCars);
  document.getElementById('resetFilters').addEventListener('click', resetFilters);
});

// –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤
function resetFilters() {
  document.getElementById('sort').value = '';
  document.getElementById('search').value = '';
  document.querySelectorAll('.filter-input').forEach(input => {
    if (input.tagName === 'SELECT') {
      input.selectedIndex = 0;
    } else {
      input.value = '';
    }
  });

  fetchCars();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞
async function fetchCars() {
  const container = document.getElementById('cars-container');
  if (!container) return;

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  container.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π...</div>';

  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    const params = getFilterParams();
    const queryString = buildQueryString(params);

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    const response = await fetch(`/api/cars?${queryString}`);

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const cars = await response.json();
    renderCars(cars);
  } catch (error) {
    console.error('Error fetching cars:', error);
    showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
function getFilterParams() {
  const sortValue = document.getElementById('sort').value;
  let sortBy = 'id';
  let sortOrder = 'ASC';

  switch (sortValue) {
    case 'price_asc':
      sortBy = 'price';
      sortOrder = 'ASC';
      break;
    case 'price_desc':
      sortBy = 'price';
      sortOrder = 'DESC';
      break;
    case 'brand_asc':
      sortBy = 'brand';
      sortOrder = 'ASC';
      break;
    default:
      sortBy = 'id';
      sortOrder = 'ASC';
  }

  return {
    search: document.getElementById('search').value,
    minYear: document.getElementById('minYear').value,
    maxYear: document.getElementById('maxYear').value,
    minPrice: document.getElementById('minPrice').value,
    maxPrice: document.getElementById('maxPrice').value,
    color: document.getElementById('color').value,
    fuelType: document.getElementById('fuelType').value,
    transmission: document.getElementById('transmission').value,
    sortBy,
    sortOrder
  };
}

// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
function buildQueryString(params) {
  return Object.entries(params)
    .filter(([_, value]) => value !== '')
    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)
    .join('&');
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
function renderCars(cars) {
  const container = document.getElementById('cars-container');
  if (!container) return;

  if (!cars || cars.length === 0) {
    container.innerHTML = `
      <div class="empty-state">
        <div class="empty-state-icon">üöó</div>
        <h3 class="empty-state-title">–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
        <p class="empty-state-text">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</p>
      </div>
    `;
    return;
  }

  container.innerHTML = cars.map(car => createCarCard(car)).join('');
}

// –°–æ–∑–¥–∞–Ω–∏–µ HTML-–∫–∞—Ä—Ç–æ—á–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
function createCarCard(car) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ë–î –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  const imageUrl = car.main_image || 'img/default.jpg';

  return `
    <div class="car-card" data-car-id="${car.id}">
      <div class="car-image" style="background-image: url('${imageUrl}'), url('img/default.jpg')">
        <img src="${imageUrl}" alt="${car.brand} ${car.model}" loading="lazy" style="display: none;"
             onerror="this.parentNode.style.backgroundImage = 'url(img/default.jpg)'">
      </div>
      <div class="car-content">
        <div class="car-header">
          <h3 class="car-title">${car.brand} ${car.model}</h3>
          <p class="car-subtitle">${car.year} –≥–æ–¥</p>
        </div>
        
        <div class="car-details">
          <div class="car-detail">
            <span class="car-detail-icon">üé®</span>
            <div>
              <div class="car-detail-label">–¶–≤–µ—Ç</div>
              <div class="car-detail-value">${car.color}</div>
            </div>
          </div>
          
          <div class="car-detail">
            <span class="car-detail-icon">‚õΩ</span>
            <div>
              <div class="car-detail-label">–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞</div>
              <div class="car-detail-value">${car.fuelType}</div>
            </div>
          </div>
          
          <div class="car-detail">
            <span class="car-detail-icon">‚öôÔ∏è</span>
            <div>
              <div class="car-detail-label">–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á</div>
              <div class="car-detail-value">${car.transmission}</div>
            </div>
          </div>
        </div>
        
        <div class="car-price">
          ${car.price.toLocaleString()} ‚ÇΩ <span class="car-price-currency">–≤ —Å—É—Ç–∫–∏</span>
        </div>
        <button class="filter-button book-btn" id="book-button">–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å</button>
      </div>
    </div>
  `;
}

// –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
function showError(message) {
  const container = document.getElementById('cars-container');
  if (!container) return;

  container.innerHTML = `
    <div class="empty-state">
      <div class="empty-state-icon">‚ö†Ô∏è</div>
      <h3 class="empty-state-title">–û—à–∏–±–∫–∞</h3>
      <p class="empty-state-text">${message}</p>
    </div>
  `;
}

// –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const modal = document.getElementById('booking-modal');
const closeBtn = document.querySelector('.close-modal');

// –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
let currentUserId = null;

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
document.addEventListener('click', (e) => {
  if (e.target.classList.contains('book-btn')) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (!currentUserId) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    const carCard = e.target.closest('.car-card');
    const carId = carCard.dataset.carId;
    const carTitle = carCard.querySelector('.car-title').textContent;

    modal.dataset.carId = carId;
    modal.querySelector('h2').textContent = `–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ${carTitle}`;
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
  }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
closeBtn.addEventListener('click', closeModal);
window.addEventListener('click', (e) => e.target === modal && closeModal());

function closeModal() {
  modal.style.display = 'none';
  document.body.style.overflow = 'auto';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
document.getElementById('booking-form').addEventListener('submit', async (e) => {
  e.preventDefault();

  const carId = modal.dataset.carId;
  const dateStart = document.getElementById('booking-date-start').value;
  const dateEnd = document.getElementById('booking-date-end').value;

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç
  if (new Date(dateEnd) < new Date(dateStart)) {
    showDateError('–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞');
    return;
  }

  try {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const response = await fetch('/api/bookings', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        userId: currentUserId,
        carId,
        startDate: dateStart,
        endDate: dateEnd
      })
    });

    if (!response.ok) {
      const error = await response.json();
      throw new Error(error.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    }

    const result = await response.json();
    alert(`–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ #${result.bookingId} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!`);
    closeModal();
    e.target.reset();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    alert(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function showDateError(message) {
  const errorElement = document.createElement('div');
  errorElement.className = 'date-error';
  errorElement.textContent = message;

  const dateRange = document.querySelector('.date-range');
  const existingError = dateRange.querySelector('.date-error');
  if (existingError) existingError.remove();

  dateRange.appendChild(errorElement);
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã (—Å–µ–≥–æ–¥–Ω—è)
window.addEventListener('DOMContentLoaded', () => {
  const today = new Date().toISOString().split('T')[0];
  document.getElementById('booking-date-start').min = today;
  document.getElementById('booking-date-end').min = today;

  document.getElementById('booking-date-start').addEventListener('change', function () {
    document.getElementById('booking-date-end').min = this.value;
  });

  // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è currentUserId (–ø—Ä–∏–º–µ—Ä):
  // currentUserId = getCurrentUserId(); 
});